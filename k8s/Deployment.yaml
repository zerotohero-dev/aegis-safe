#
# .-'_.---._'-.
# ||####|(__)||   Protect your secrets, protect your business.
#   \\()|##//       Secure your sensitive data with Aegis.
#    \\ |#//                  <aegis.z2h.dev>
#     .\_/.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: aegis-safe
  namespace: aegis-system
  labels:
    app.kubernetes.io/name: aegis-safe
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aegis-safe
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aegis-safe
        app.kubernetes.io/part-of: aegis-system
    spec:
      serviceAccountName: aegis-safe
      containers:
      - name: main
        image: z2hdev/aegis-safe:0.10.0
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: spire-agent-socket
          mountPath: /spire-agent-socket
          readOnly: true
        - name: aegis-data
          mountPath: /data
        - name: aegis-age
          mountPath: /key
          readOnly: true
        #
        # env:
        #
        # You can configure Aegis Safe by providing environment variables.
        #
        # See https://aegis.z2h.dev/docs/architecture for more information about
        # these environment variables.
        #
        # When you don’t explicitly provide env vars here, Aegis Safe will assume
        # the default values outlined in the given link above.
        #
        livenessProbe:
          httpGet:
            path: /
            port: 8081
          initialDelaySeconds: 1
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 8082
          initialDelaySeconds: 1
          periodSeconds: 10
        #
        # Resource allocation will highly-depend on the system.
        # Benchmark your deployment, monitor your resource utilization, and
        # adjust these values accordingly.
        # resources:
        #  requests:
        #    memory: "128Mi"
        #    cpu: "250m"
        #  limits:
        #    memory: "128Mi"
        #    # We recommend “NOT” setting a CPU limit.
        #    # As long as you have configured your CPU “requests” correctly,
        #    # everything would work fine.
        #
      volumes:
      # Using SPIFFE CSI Driver to bind to the SPIRE Agent Socket
      # ref: https://github.com/spiffe/spiffe-csi
      - name: spire-agent-socket
        csi:
          driver: "csi.spiffe.io"
          readOnly: true
      #
      # aegis-data is the volume where the encrypted backups of the secrets
      # will be stored, make sure that it is durable, performant, and reliable.
      #
      # !!! CAUTION !!!
      # HostPath volumes present many security risks, and it is a best practice
      # to avoid using it for production deployments. For production setups,
      # you are strongly encouraged to choose a persistent volume that suits
      # your needs.
      # ref: https://kubernetes.io/docs/concepts/storage/volumes/
      #
      - name: aegis-data
        hostPath:
          path: /var/local/aegis/data
          type: DirectoryOrCreate
      # aegis-age stores the encryption keys to restore secrets from aegis-data.
      # Using an in-memory volume is the recommended best practice for storing
      # sensitive data. An alternative approach is storing the secrets in the
      # container’s environment variables; however, that could leak to the log
      # aggregators when the pod crashes and the process dumps the contents
      # of the memory to the logs as a diagnostic stack trace.
      - name: aegis-age
        secret:
          secretName: safe-age-key
          items:
          - key: KEY_TXT
            path: key.txt
